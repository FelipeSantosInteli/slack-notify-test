name: Slack Notify on Pull Request

on:
  pull_request:
    branches: [develop, "release/**", main]

jobs:
  slack_notify:
    runs-on: ubuntu-latest
    steps:
      - uses: kceb/pull-request-url-action@v1
        id: pr-url

      - run: echo "${{ steps.pr-url.outputs.url }}"

      - name: Install Python and Dependencies
        run: |
          sudo apt-get install python3-pip
          pip3 install slack_sdk

      - name: Send Notify

        env:
          PR_URL: ${{ steps.pr-url.outputs.url }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_PR_NUMBER: ${{ github.event.number }}
        run: |
          echo "
          import logging
          import os
          from slack_sdk import WebClient
          from slack_sdk.errors import SlackApiError

          repository = os.environ.get('GITHUB_REPOSITORY')
          pr_number = os.environ.get('GITHUB_PR_NUMBER')
          pr_link = f'https://github.com/{repository}/pull/{pr_number}'

          client = WebClient(token=os.environ.get('SLACK_BOT_TOKEN'))
          logger = logging.getLogger(__name__)

          channel_id = os.environ.get('CHANNEL_ID')

          try:
              result = client.chat_postMessage(
                  channel=channel_id, 
                  text='New PR from $GITHUB_HEAD_REF to $GITHUB_BASE_REF',
                  attachments=[{"pretext": $GITHUB_ACTOR, "text": pr_link}]
              )
              logger.info(result)

          except SlackApiError as e:
              logger.error(f'Error posting message: {e}')
                    " > notify_slack.py
                    python3 notify_slack.py
